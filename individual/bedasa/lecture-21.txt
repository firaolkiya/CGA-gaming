Lesson 21: Mini-Project - Side Scroller
In this lesson, I apply your knowledge of collision detection and velocity to create a simple side-scroller game.
This mini-project provides hands-on experience with game mechanics and helps reinforce your understanding of key programming principles used in game development.

***************my practice project**************

var player = createSprite(50, 350);
player.setAnimation("frog");
player.scale = 0.5;
var target = createSprite(400, 300);
target.setAnimation("fly");
target.scale = 0.3;
target.velocityX = -3;
var obstacle = createSprite(400, 350);
obstacle.setAnimation("mushroom");
obstacle.scale = 0.5;
obstacle.velocityX = -5;
// Create variables for score and health
var score = 0;
var health = 100;
function draw() {
  // Draw the background
  background("lightblue");
  // Draw the ground
  fill("green");
  rect(0, 370, 400, 30);
  // SPRITE INTERACTIONS
  // Check if the player is touching the obstacle
  if (player.isTouching(obstacle)) {
    health -= 1; // Decrease health
    obstacle.scale += 0.1; // Change the obstacle sprite by increasing its size
    obstacle.x = 400; // Reset the obstacle to the right
  }
  // Check if the player is touching the target
  if (player.isTouching(target)) {
    score += 1; // Increase score by 1 each time the player touches the target
    target.x = 400; // Reset the target to the right
  }
  // LOOPING
  if (obstacle.x < 0) {
    obstacle.x = 400;
  }
  if (target.x < 0) {
    target.x = 400;
  }
  // SCOREBOARD
  fill("black");
  textSize(20);
  text("Health: " + health, 20, 30); // Display health
  text("Score: " + score, 20, 50);  // Display score numerically
  // GAME OVER
  if (health <= 0) {
    background("black");
    fill("red");
    textSize(50);
    text("Game Over!", 60, 200);
    noLoop(); // Stop the game when health reaches 0
  }
  // Draw sprites
  drawSprites();
}
